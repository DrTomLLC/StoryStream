# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  lint:
    name: Lint (fmt + clippy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: rustfmt check
        run: cargo fmt --all -- --check
      - name: clippy (deny warnings)
        run: cargo clippy --workspace --all-features --all-targets -- -D warnings

  build-and-test:
    name: Build & Test (${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --workspace --all-features --all-targets
      - name: Test
        run: cargo test --workspace --all-features -- --nocapture

  coverage:
    name: Coverage (tarpaulin)
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin --locked
      - name: Run coverage
        run: |
          cargo tarpaulin \
            --workspace \
            --all-features \
            --timeout 120 \
            --out Xml \
            --out Lcov \
            --engine llvm
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            cobertura.xml
            lcov.info
          if-no-files-found: ignore
      - name: Upload to Codecov (optional)
        if: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: false

  security:
    name: Security (audit + deny)
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: cargo-audit
        run: |
          cargo install cargo-audit --locked
          cargo audit
      - name: cargo-deny
        run: |
          cargo install cargo-deny --locked
          cargo deny check --all-features

  docs:
    name: Docs build
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build docs
        run: cargo doc --workspace --all-features --no-deps
      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: cargo-docs
          path: target/doc
          if-no-files-found: ignore

  verify:
    name: Verify all stages
    if: always()
    runs-on: ubuntu-latest
    needs: [build-and-test, coverage, security, docs]
    steps:
      - name: Ensure upstream jobs succeeded
        run: |
          echo "build-and-test: ${{ needs.build-and-test.result }}"
          echo "coverage: ${{ needs.coverage.result }}"
          echo "security: ${{ needs.security.result }}"
          echo "docs: ${{ needs.docs.result }}"
          test "${{ needs.build-and-test.result }}" = "success"
          test "${{ needs.coverage.result }}" = "success"
          test "${{ needs.security.result }}" = "success"
          test "${{ needs.docs.result }}" = "success"
