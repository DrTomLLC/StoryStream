name: CI

on:
  push:
    branches: ["**"]        # run on any branch
  pull_request:
    branches: ["**"]        # run on PRs targeting any branch
  workflow_dispatch:        # allow manual runs from the Actions tab

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  check:
    name: Lint (fmt + clippy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with: { components: clippy, rustfmt }
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check
      - run: cargo clippy --workspace --all-features --all-targets -- -D warnings

  build-test:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: check
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --workspace --all-features --all-targets
      - run: cargo test --workspace --all-features -- --nocapture

  coverage:
    name: Coverage (tarpaulin)
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cargo-tarpaulin --locked
      - run: |
          cargo tarpaulin \
            --workspace \
            --all-features \
            --timeout 120 \
            --out Xml \
            --out Lcov \
            --engine llvm
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            cobertura.xml
            lcov.info
          if-no-files-found: ignore
      - name: Upload to Codecov (optional)
        if: ${{ secrets.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: false

  security:
    name: Security (audit + deny)
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cargo-audit --locked
      - run: cargo audit
      - run: cargo install cargo-deny --locked
      - run: cargo deny check --all-features

  docs:
    name: Docs build
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --workspace --all-features --no-deps
      - uses: actions/upload-artifact@v4
        with:
          name: cargo-docs
          path: target/doc
          if-no-files-found: ignore

  verify:
    name: Verify
    if: always()
    runs-on: ubuntu-latest
    needs: [ build-test, coverage, security, docs ]
    steps:
      - name: Summarize job results
        run: |
          echo "build-test: ${{ needs.build-test.result }}"
          echo "coverage:   ${{ needs.coverage.result }}"
          echo "security:   ${{ needs.security.result }}"
          echo "docs:       ${{ needs.docs.result }}"
          if [ "${{ needs.build-test.result }}" != "success" ] || \
             [ "${{ needs.coverage.result }}"   != "success" ] || \
             [ "${{ needs.security.result }}"   != "success" ] || \
             [ "${{ needs.docs.result }}"       != "success" ]; then
            echo "One or more CI jobs failed."
            exit 1
          fi
